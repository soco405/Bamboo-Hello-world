
##################
#check for java
# Show Java version
###################
$JAVA_VERSION="(Get-Command java | Select-Object -ExpandProperty Version).tostring()"

if ($JAVA_VERSION -gt 1)
{
Write-Output "$JAVA_VERSION"
}
else
{
exit 0
}
###############################################################################
#Create Large file 
#app/res directory
#Dending on the size of the file you want to create, you can swap out varibles
###############################################################################
$twoMBfile=2048576
$oneGBfile=1024288000
$twoGBfile=2048576000

######################################################
#Creates a large file with plan and build identifiers.
######################################################
$out = new-object byte[] $twoMBfile; 
(new-object Random).NextBytes($out); 
[IO.File]::WriteAllBytes(${bamboo.LargeFile}, $out)

############################
#build java class
#app\src directory
#Building Class Definition
###########################
Write-Output 'Generating class definitions'
javac -d "..\bin\classes\" ".\com\thalesgroup\App.java"

# Build the jar
#app\bin\classes directory
Write-Output 'Packaging jar file'
jar cfe "..\jar\App.jar" com.thalesgroup.App "com\thalesgroup\App.class"

#need to add large file
#app directory
Write-Output 'add large file'
jar -uf .\bin\jar\App.jar res\${bamboo.LargeFile}
#show contents of Jar
jar tf ".\bin\jar\App.jar"
Write-Output 'Running jar file'
java -jar ".\bin\jar\App.jar"



